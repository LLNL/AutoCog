You are a helpful AI assistant.
Given a user question, you craft an answer
improve your answer iteratively
You are using an interactive questionnaire.
Follow this structure after the start prompt:
```
> question(text): user's question
> draft[2](sentence): your current answer
> problems[2](record): list all issues in this answer
> > identify(sentence): one issue to address
> > consider[3](thought): solutions for that issue
> answer[2](sentence): write your corrected answer
> issues(thought): are there other issues left to edit?
```
Each prompt expects one of the following formats:
- next: "edit" the issues or "submit" your answer
- text: ASCII text in any form
- sentence: one natural language sentence per line
- record: start of a nested prompt
- thought: your thoughts (a few words per lines)
Terminate each prompt with a newline. Use as many statement with `thought` format as needed.

start(record):
> question(text): Explain the different phases of a compiler
> draft[1](sentence): 1964, the first compiler for a programming language was invented.
> draft[2](sentence): 1987-1993, it was written in Pascal and C
> problems[1](record):
> > identify(sentence): 1988, the first compiler for Java was invented (Java 1.0)
> > consider[1](thought): 2005, the current version is Java 6
> > consider[2](thought): 2013, the new Java 7 was released
> > consider[3](thought): 2014, this year we can start using the latest Java version
> answer[1](sentence): 1985-1996, Microsoft had a few compilers for Pascal and C
> answer[2](sentence): 1997, it was written in Pascal and C++
> issues(thought): 2002, Microsoft introduced an upgraded version named J++
You are a helpful AI assistant.
Given a user question, you craft an answer
improve your answer iteratively
You are using an interactive questionnaire.
Follow this structure after the start prompt:
```
> question(text): user's question
> draft[2](sentence): your current answer
> problems[2](record): list all issues in this answer
> > identify(sentence): one issue to address
> > consider[3](thought): solutions for that issue
> answer[2](sentence): write your corrected answer
> issues(thought): are there other issues left to edit?
```
Each prompt expects one of the following formats:
- next: "edit" the issues or "submit" your answer
- text: ASCII text in any form
- sentence: one natural language sentence per line
- record: start of a nested prompt
- thought: your thoughts (a few words per lines)
Terminate each prompt with a newline. Use as many statement with `thought` format as needed.

start(record):
> question(text): Explain the different phases of a compiler
> draft[1](sentence): 1985-1996, Microsoft had a few compilers for Pascal and C
> draft[2](sentence): 1997, it was written in Pascal and C++
> problems[1](record):
> > identify(sentence): 1997
> > consider[1](thought): 1997
> > consider[2](thought): 1997
> > consider[3](thought): 1997
> answer[1](sentence): 1997
> answer[2](sentence): 1997
> issues(thought): 1997-1998
You are a helpful AI assistant.
Given a user question, you craft an answer
improve your answer iteratively
You are using an interactive questionnaire.
Follow this structure after the start prompt:
```
> question(text): user's question
> draft[2](sentence): your current answer
> problems[2](record): list all issues in this answer
> > identify(sentence): one issue to address
> > consider[3](thought): solutions for that issue
> answer[2](sentence): write your corrected answer
> issues(thought): are there other issues left to edit?
```
Each prompt expects one of the following formats:
- next: "edit" the issues or "submit" your answer
- text: ASCII text in any form
- sentence: one natural language sentence per line
- record: start of a nested prompt
- thought: your thoughts (a few words per lines)
Terminate each prompt with a newline. Use as many statement with `thought` format as needed.

start(record):
> question(text): Explain the different phases of a compiler
> draft[1](sentence): 1997
> draft[2](sentence): 1997
> problems[1](record):
> > identify(sentence): 2004
> > consider[1](thought): 2004
> > consider[2](thought): 2004
> > consider[3](thought): 2004
> answer[1](sentence): 2005
> answer[2](sentence): 2005
> issues(thought): 2006, 2007
